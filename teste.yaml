- name: Test Echo Digest
  shell: bash
  env:
    DOCKER_BUILDKIT: 1
  run: |
    IMAGE_NAME="${{ inputs.acr_name }}.azurecr.io/${{ env.image_dir }}"
    
    # Verifica se o digest foi definido
    if [ -z "$DIGEST" ]; then
      echo "❌ ERRO: Digest não foi definido"
      exit 1
    fi
    
    # Verifica se o digest tem o formato correto (sha256:...)
    if [[ ! "$DIGEST" =~ ^sha256:[a-f0-9]{64}$ ]]; then
      echo "❌ ERRO: Digest não está no formato correto: $DIGEST"
      exit 1
    fi
    
    echo "✅ Digest válido: $DIGEST"
    echo "✅ Imagem: $IMAGE_NAME@$DIGEST"
    
    # Opcional: Verificar se a imagem existe no registry
    echo "Verificando se a imagem existe no registry..."
    if docker manifest inspect "$IMAGE_NAME@$DIGEST" > /dev/null 2>&1; then
      echo "✅ Imagem confirmada no registry"
    else
      echo "⚠️  Aviso: Não foi possível verificar a imagem no registry (pode ser questão de permissão)"
    fi




- name: Push Image and Extract Digest  
  id: push_image_digest
  shell: bash
  env:
    DOCKER_BUILDKIT: 1
  run: |
    IMAGE_NAME="${{ inputs.acr_name }}.azurecr.io/${{ env.image_dir }}"
    TAG="${{ env.image_tag }}"
    
    # Push com captura mais robusta do digest
    echo "Pushing image with tag and extracting digest..."
    PUSH_OUTPUT=$(docker push "$IMAGE_NAME:$TAG" 2>&1)
    
    # Extrair digest de forma mais confiável
    DIGEST=$(echo "$PUSH_OUTPUT" | grep -E "digest: sha256:" | tail -1 | sed 's/.*digest: //')
    
    if [ -z "$DIGEST" ]; then
      echo "::error::Failed to extract digest from push output"
      echo "Push output was:"
      echo "$PUSH_OUTPUT"
      exit 1
    fi
    
    echo "Successfully pushed image: $IMAGE_NAME:$TAG"
    echo "Digest: $DIGEST"
    
    # Export para próximos steps
    echo "DIGEST=$DIGEST" >> $GITHUB_ENV
    echo "digest=$DIGEST" >> $GITHUB_OUTPUT

